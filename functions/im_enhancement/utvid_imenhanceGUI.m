function [utvid] = utvid_imenhanceGUI(hMainFigure,utvid)
%UNTITLED2 Summary of this function goes here
%   Detailed explanation goes here
monpos = get(0,'monitorposition');
if size(monpos,1) == 1                                  % there is only a primary monitor
    scrbase = monpos(1,1:2)+8;
    scrsize = (monpos(1,3:4)-monpos(1,1:2) - [8 62]);
else                                                    % there is a secondary monitor
    scrsize = (monpos(2,3:4)-monpos(2,1:2)  - [8 62]);
    scrbase(1) = monpos(2,1)+8;
    scrbase(2) = monpos(1,4)-monpos(2,4)+9;
end
if scrsize(1)/scrsize(2)>1.5, scrsize(1)=1.5*scrsize(2); end

scrsize = monpos(1,3:4);
winsize = .9 * scrsize;%[800 600];
scrbase = monpos(1,1:2)+0.5*scrsize - 0.5*winsize;

enhanceFigure = figure(	'Color',[1 1 1],...
    'MenuBar','none',...
    'Name','UT IMAGE ENHANCEMENT',...
    'PaperPositionMode','auto',...
    'NumberTitle','off',...
    'Toolbar','none',...
    'Position',[scrbase winsize],...
    'Resize','off');

handles.hax1 = axes('Parent',enhanceFigure,'position',[0 0.4 0.5 0.5]);
handles.hax2 = axes('Parent',enhanceFigure,'position',[0.5 0.4 0.5 0.5]);
% dit is een hard solution, moet nog een meer verfijnde oplossing komen

try
     if strcmp(utvid.version,'R2012')
        handles.I = im2double(read(VideoReader([utvid.settings.dir_data '\Video\' utvid.movs.list(utvid.movs.center(1,1)).name]),2));
    elseif strcmp(utvid.version,'R2013')
        handles.I = im2double(read(VideoReader([utvid.settings.dir_data '\Video\' utvid.movs.list(utvid.movs.center(1,1)).name]),1));
    else
        disp('Version not yet implemented')
    end
catch
    if strcmp(utvid.version,'R2012')
        handles.I = im2double(read(VideoReader([utvid.settings.dir_data '\Video\NEW' utvid.movs.list(utvid.movs.center(1,1)).name]),2));
    elseif strcmp(utvid.version,'R2013')
        handles.I = im2double(read(VideoReader([utvid.settings.dir_data '\Video\NEW' utvid.movs.list(utvid.movs.center(1,1)).name]),1));
    else
        disp('Version not yet implemented')
    end
    handles.I = im2double(read(VideoReader([utvid.settings.dir_data '\Video\NEW' utvid.movs.list(utvid.movs.center(1,1)).name]),1));
end
handles.J = [];
axes(handles.hax1);imshow(handles.I);title('Original Image');
axes(handles.hax2);imshow(handles.I);title('Enhanced Image');

Nx = 3; % number of objects in x direction
Ny = 2; % number of objects in y direction

bsize = [winsize(1) winsize(2)]/8;
nbutton = 1;
posx = mod(nbutton-1,Nx);
posy = floor((nbutton-1)/Nx)+1;
handles.h{1} = uicontrol(...
    'Parent',enhanceFigure,...
    'position',[posx*bsize(1)+.06*winsize(1) winsize(2)-posy*bsize(2)-winsize(2)*.65 bsize],...
    'Style','pushbutton',...
    'fontsize',10,...
    'string','Histeq',...
    'horizontalalignment','center',...
    'enable','on',...
    'callback',@utvid_histeq);
nbutton = 2;
posx = mod(nbutton-1,Nx);
posy = floor((nbutton-1)/Nx)+1;
handles.h{2} = uicontrol(...
    'Parent',enhanceFigure,...
    'position',[posx*bsize(1)+.06*winsize(1) winsize(2)-posy*bsize(2)-winsize(2)*.65 bsize],...
    'Style','pushbutton',...
    'fontsize',10,...
    'string','Imadjust',...
    'horizontalalignment','center',...
    'enable','on',...
    'callback',@utvid_imadjust);
nbutton = 3;
posx = mod(nbutton-1,Nx);
posy = floor((nbutton-1)/Nx)+1;
handles.h{3} = uicontrol(...
    'Parent',enhanceFigure,...
    'position',[posx*bsize(1)+.06*winsize(1) winsize(2)-posy*bsize(2)-winsize(2)*.65 bsize],...
    'Style','pushbutton',...
    'fontsize',10,...
    'string','Filters',...
    'horizontalalignment','center',...
    'enable','on',...
    'callback',@contrastfilter);
nbutton = 4;
posx = mod(nbutton-1,Nx);
posy = floor((nbutton-1)/Nx)+1;
handles.h{4} = uicontrol(...
    'Parent',enhanceFigure,...
    'position',[posx*bsize(1)+.06*winsize(1) winsize(2)-posy*bsize(2)-winsize(2)*.7 bsize],...
    'Style','pushbutton',...
    'fontsize',10,...
    'string','Histeq',...
    'horizontalalignment','center',...
    'enable','off',...
    'visible','off',...
    'callback',@utvid_na);
nbutton = 5;
posx = mod(nbutton-1,Nx);
posy = floor((nbutton-1)/Nx)+1;
handles.h{5} = uicontrol(...
    'Parent',enhanceFigure,...
    'position',[posx*bsize(1)+.06*winsize(1) winsize(2)-posy*bsize(2)-winsize(2)*.7 bsize],...
    'Style','pushbutton',...
    'fontsize',10,...
    'string','Reset all',...
    'horizontalalignment','center',...
    'enable','on',...
    'callback',@reset);

nbutton = 6;
posx = mod(nbutton-1,Nx);
posy = floor((nbutton-1)/Nx)+1;
handles.h{6} = uicontrol(...
    'Parent',enhanceFigure,...
    'position',[posx*bsize(1)+.06*winsize(1) winsize(2)-posy*bsize(2)-winsize(2)*.7 bsize],...
    'Style','pushbutton',...
    'fontsize',10,...
    'string','Using colorscale',...
    'horizontalalignment','center',...
    'enable','on',...
    'callback',@toggle);

utvid.enhancement.histeq =[];
utvid.enhancement.imadjust =[];
utvid.enhancement.filters =[];

handles.panel = uipanel(...
    'Parent',enhanceFigure,...
    'Title','Filter Settings',...
    'FontSize',12,...
    'position',[0.5 0.05 0.45 0.3]...
    );
%% slider 1 sigma up
nsliderx = 3; % number of sliders in horizontal direction
nslidery = 3; % number of sliders in vertical direction
spacingx = nsliderx+1;
spacingy = nslidery+1;
pospanel = get(handles.panel,'position'); % get positiondata of panel
pansize = [winsize(1)*pospanel(3) winsize(2)*pospanel(4)]; % calculate panel size
sizespacing = floor([pansize(1)/spacingx, pansize(2)/spacingy]*.1);
slize = floor([pansize(1)/nsliderx, pansize(2)/nslidery]*.8*.75);
textsize = floor([pansize(1)/nsliderx, pansize(2)/nslidery]*.9*.25);

handles.sliders.sigma_up = uicontrol(...
    'Parent',handles.panel,...
    'Style', 'slider',...
    'Min',0,'Max',50,'Value',15,...
    'Position', [sizespacing(1) sizespacing(2)+textsize(2) slize],...
    'Callback', {@utvid_slidersigmaup});
handles.text.sigma_up =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'FontSize',12,...
    'Position',[sizespacing(1)+slize(1) sizespacing(2)+textsize(2)+slize(2)/2 textsize],...
    'String',num2str(15));
handles.text.s1 =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'Position',[sizespacing(1) sizespacing(2) textsize(1)*2.5 textsize(2)],...
    'String','Sigma Up');
%% slider 2 sigma down
handles.sliders.sigma_down = uicontrol(...
    'Parent',handles.panel,...
    'Style', 'slider',...
    'Min',0,'Max',50,'Value',0,...
    'Position', [sizespacing(1) 2*sizespacing(2)+2*textsize(2)+slize(2) slize],...
    'Callback', {@utvid_slidersigmadown});
handles.text.sigma_down =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'FontSize',12,...
    'Position',[sizespacing(1)+slize(1) 2*sizespacing(2)+2*textsize(2)+slize(2)*1.5 textsize],...
    'String',num2str(0));
handles.text.s2 =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'Position',[sizespacing(1) 2*sizespacing(2)+slize(2)+textsize(2) textsize(1)*2.5 textsize(2)],...
    'String','Sigma Down');
%% slider 3 alpha
handles.sliders.alpha = uicontrol(...
    'Parent',handles.panel,...
    'Style', 'slider',...
    'Min',0,'Max',50,'Value',2,...
    'Position', [sizespacing(1) 3*sizespacing(2)+3*textsize(2)+2*slize(2) slize],...
    'Callback', {@utvid_slideralpha});
handles.text.alpha =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'FontSize',12,...
    'Position',[sizespacing(1)+slize(1) 3*sizespacing(2)+3*textsize(2)+2.5*slize(2) textsize],...
    'String',num2str(2));
handles.text.s3 =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'Position',[sizespacing(1) 3*sizespacing(2)+2*slize(2)+2*textsize(2) textsize(1)*2.5 textsize(2)],...
    'String','Alpha');
%% slider 4 vertical
handles.sliders.vertical = uicontrol(...
    'Parent',handles.panel,...
    'Style', 'slider',...
    'Min',-25,'Max',25,'Value',15,'SliderStep',[1 5]/50,...
    'Position', [2*sizespacing(1)+slize(1)+textsize(1) sizespacing(2)+textsize(2) slize],...
    'Callback', {@utvid_slidervertdis});
handles.text.vertical =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'FontSize',12,...
    'Position',[2*sizespacing(1)+slize(1)*2+textsize(1) sizespacing(2)+textsize(2)+slize(2)/2 textsize ],...
    'String',num2str(15));
handles.text.s4 =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'Position',[2*sizespacing(1)+slize(1)+textsize(1) sizespacing(2) textsize(1)*2.5 textsize(2)],...
    'String','Vertical Distance');
%% slider 5 horizontal
handles.sliders.horizontal = uicontrol(...
    'Parent',handles.panel,...
    'Style', 'slider',...
    'Min',-25,'Max',25,'Value',0, 'SliderStep',[1 5]/50,...
    'Position', [2*sizespacing(1)+slize(1)+textsize(1) 2*sizespacing(2)+2*textsize(2)+slize(2) slize],...
    'Callback', {@utvid_sliderhordis});
handles.text.horizontal =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'FontSize', 12,...
    'Position',[2*sizespacing(1)+slize(1)*2+textsize(1) 2*sizespacing(2)+2*textsize(2)+slize(2)*1.5 textsize],...
    'String',num2str(0));
handles.text.s5 =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'Position',[2*sizespacing(1)+slize(1)+textsize(1) 2*sizespacing(2)+slize(2)+textsize(2) textsize(1)*2.5 textsize(2)],...
    'String','Horizontal Distance');
%% slider 6 a
handles.sliders.a = uicontrol(...
    'Parent',handles.panel,...
    'Style', 'slider',...
    'Min',0,'Max',50,'Value',25,...
    'Position', [2*sizespacing(1)+slize(1)+textsize(1) 3*sizespacing(2)+3*textsize(2)+2*slize(2) slize],...
    'Callback', {@utvid_slidera});
handles.text.a =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'FontSize',12,...
    'Position',[2*sizespacing(1)+slize(1)*2+textsize(1) 3*sizespacing(2)+3*textsize(2)+2.5*slize(2) slize/3.5],...
    'String',num2str(25));
handles.text.s6 =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'Position',[2*sizespacing(1)+slize(1)+textsize(1) 3*sizespacing(2)+2*slize(2)+2*textsize(2) textsize(1)*2.5 textsize(2)],...
    'String','A');
%% slider 7 b
handles.sliders.b = uicontrol(...
    'Parent',handles.panel,...
    'Style', 'slider',...
    'Min',0,'Max',50,'Value',0.5,...
    'Position', [3*sizespacing(1)+2*slize(1)+2*textsize(1) sizespacing(2)+textsize(2) slize],...
    'Callback', {@utvid_sliderb});
handles.text.b =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'FontSize',12,...
    'Position',[3*sizespacing(1)+slize(1)*3+2*textsize(1) sizespacing(2)+textsize(2)+slize(2)/2 textsize ],...
    'String',num2str(0.5));
handles.text.s7 =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'Position',[3*sizespacing(1)+2*slize(1)+2*textsize(1) sizespacing(2) textsize(1)*2.5 textsize(2)],...
    'String','B');
%% slider 8 region
handles.sliders.region = uicontrol(...
    'Parent',handles.panel,...
    'Style', 'slider',...
    'Min',0,'Max',50,'Value',6,...
    'Position', [3*sizespacing(1)+2*slize(1)+2*textsize(1) 2*sizespacing(2)+2*textsize(2)+slize(2) slize],...
    'Callback', {@utvid_sliderregion});
handles.text.region =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'FontSize',12,...
    'Position',[3*sizespacing(1)+slize(1)*3+2*textsize(1) 2*sizespacing(2)+2*textsize(2)+slize(2)*1.5 textsize],...
    'String',num2str(6));
handles.text.s8 =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'Position',[3*sizespacing(1)+2*slize(1)+2*textsize(1) 2*sizespacing(2)+slize(2)+textsize(2) textsize(1)*2.5 textsize(2)],...
    'String','Region');
%% slider 9 window
handles.sliders.window = uicontrol(...
    'Parent',handles.panel,...
    'Style', 'slider',...
    'Min',0,'Max',50,'Value',5,...
    'Position', [3*sizespacing(1)+2*slize(1)+2*textsize(1) 3*sizespacing(2)+3*textsize(2)+2*slize(2) slize],...
    'Callback', {@utvid_sliderwindow});
handles.text.window =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'FontSize',12,...
    'Position',[3*sizespacing(1)+slize(1)*3+2*textsize(1) 3*sizespacing(2)+3*textsize(2)+2.5*slize(2) slize/3.5],...
    'String',num2str(5));
handles.text.s9 =     uicontrol(...
    'Parent',handles.panel,...
    'Style','text',...
    'Position',[3*sizespacing(1)+2*slize(1)+2*textsize(1) 3*sizespacing(2)+2*slize(2)+2*textsize(2) textsize(1)*2.5 textsize(2)],...
    'String','Window');
%% Get slider values
handles.sigma_up = get(handles.sliders.sigma_up,'value');
handles.sigma_down = get(handles.sliders.sigma_down,'value');
handles.alpha = get(handles.sliders.alpha,'value');
handles.vertical = get(handles.sliders.vertical,'value');
handles.horizontal = get(handles.sliders.horizontal,'value');
handles.region = get(handles.sliders.region,'value');
handles.window = get(handles.sliders.window,'value');
handles.averpsf = fspecial('average',2*handles.window+1);
handles.a = get(handles.sliders.a,'value');
handles.b = get(handles.sliders.b,'value');
try
    handles.coords = utvid.coords.lip.center;
catch
    handles.coords =[];
    disp('Warning no coordinates available. Select markers first!!')
end
handles.mono = 'false';

set(gcf,'CloseRequestFcn',@utvid_close);
guidata(enhanceFigure,handles);
uiwait(enhanceFigure);
%% utvid close
function utvid_close(enhanceFigure,handles)
        handles = guidata(enhanceFigure);
    if strcmpi(utvid.enhancement.filters,'true')==1
        utvid.enhancement.sigma_up = handles.sigma_up;
        utvid.enhancement.sigma_down = handles.sigma_down;
        utvid.enhancement.alpha = handles.alpha;
        utvid.enhancement.vertical = handles.vertical;
        utvid.enhancement.horizontal = handles.horizontal;
        utvid.enhancement.region = handles.region;
        utvid.enhancement.window = handles.window;
        utvid.enhancement.averpsf = handles.averpsf;
        utvid.enhancement.a = handles.a;
        utvid.enhancement.b = handles.b;
    end
    delete(gcf)
end
%% Not yet implemented function
function utvid_na(enhanceFigure,handles)
warndlg('not yet implemented',' ','modal')
end
%% histogram equalizer
function utvid_histeq(enhanceFigure,handles);
handles = guidata(enhanceFigure);
set(handles.h{1},'background','g')
if isempty(handles.J)==1;
    handles.J = handles.I;
end
for i = 1:size(handles.I,3)
    handles.J(:,:,i) = histeq(handles.J(:,:,i));
end
axes(handles.hax2);imshow(handles.J);title('Enhanced Image');
utvid.enhancement.histeq = 'true';
guidata(enhanceFigure,handles);
end
%% image adjuster
function utvid_imadjust(enhanceFigure,handles);
handles = guidata(enhanceFigure);
set(handles.h{2},'background','g')
if isempty(handles.J)==1;
    handles.J = handles.I;
end
handles.J = imadjust(handles.J,[.3 .2 .2; .6 .7 .7]);
axes(handles.hax2);imshow(handles.J);title('Enhanced Image');
utvid.enhancement.imadjust = 'true';
guidata(enhanceFigure,handles);
end
%% Filtering
function contrastfilter(enhanceFigure,handles);
handles = guidata(enhanceFigure);
set(handles.h{3},'background','g')
if isempty(handles.J)==1;
    handles.J = handles.I;
end
handles.F = utvid_applyfilter(handles.J,handles.coords,handles);
axes(handles.hax2);imshow(handles.F);title('Enhanced Image');
utvid.enhancement.filters = 'true';
guidata(enhanceFigure,handles);
end
%% sigmaup
function utvid_slidersigmaup(enhanceFigure,handles);
handles = guidata(enhanceFigure);
handles.sigma_up =  get(handles.sliders.sigma_up,'Value');
set(handles.text.sigma_up,'String',handles.sigma_up);
if isempty(handles.J)==1;
    handles.J = handles.I;
end
handles.F = utvid_applyfilter(handles.J,handles.coords,handles);
axes(handles.hax2);imshow(handles.F);title('Enhanced Image');
utvid.enhancement.filters = 'true';set(handles.h{3},'background','g')
guidata(enhanceFigure,handles);
end
%% sigmadown
function utvid_slidersigmadown(enhanceFigure,handles);
handles = guidata(enhanceFigure);
handles.sigma_down =  get(handles.sliders.sigma_down,'Value');
set(handles.text.sigma_down,'String',handles.sigma_down);
if isempty(handles.J)==1;
    handles.J = handles.I;
end
handles.F = utvid_applyfilter(handles.J,handles.coords,handles);
axes(handles.hax2);imshow(handles.F);title('Enhanced Image');
utvid.enhancement.filters = 'true';set(handles.h{3},'background','g')
guidata(enhanceFigure,handles);
end
%% alpha
function utvid_slideralpha(enhanceFigure,handles);
handles = guidata(enhanceFigure);
handles.alpha =  get(handles.sliders.alpha,'Value');
set(handles.text.alpha,'String',handles.alpha);
if isempty(handles.J)==1;
    handles.J = handles.I;
end
handles.F = utvid_applyfilter(handles.J,handles.coords,handles);
axes(handles.hax2);imshow(handles.F);title('Enhanced Image');
utvid.enhancement.filters = 'true'; set(handles.h{3},'background','g')
guidata(enhanceFigure,handles);
end
%% vertical distance
function utvid_slidervertdis(enhanceFigure,handles);
handles = guidata(enhanceFigure);
handles.vertical =  round(get(handles.sliders.vertical,'Value'));
set(handles.text.vertical,'String',handles.vertical);
if isempty(handles.J)==1;
    handles.J = handles.I;
end
handles.F = utvid_applyfilter(handles.J,handles.coords,handles);
axes(handles.hax2);imshow(handles.F);title('Enhanced Image');
utvid.enhancement.filters = 'true';set(handles.h{3},'background','g')
guidata(enhanceFigure,handles);
end
%% horizontal distance
function utvid_sliderhordis(enhanceFigure,handles);
handles = guidata(enhanceFigure);
handles.horizontal =  round(get(handles.sliders.horizontal,'Value'));
set(handles.text.horizontal,'String',handles.horizontal);
if isempty(handles.J)==1;
    handles.J = handles.I;
end
handles.F = utvid_applyfilter(handles.J,handles.coords,handles);
axes(handles.hax2);imshow(handles.F);title('Enhanced Image');
utvid.enhancement.filters = 'true';set(handles.h{3},'background','g')
guidata(enhanceFigure,handles);
end
%% A
function utvid_slidera(enhanceFigure,handles);
handles = guidata(enhanceFigure);
handles.a =  get(handles.sliders.a,'Value');
set(handles.text.a,'String',handles.a);
if isempty(handles.J)==1;
    handles.J = handles.I;
end
handles.F = utvid_applyfilter(handles.J,handles.coords,handles);
axes(handles.hax2);imshow(handles.F);title('Enhanced Image');
utvid.enhancement.filters = 'true';set(handles.h{3},'background','g')
guidata(enhanceFigure,handles);
end
%% B
function utvid_sliderb(enhanceFigure,handles);
handles = guidata(enhanceFigure);
handles.b =  get(handles.sliders.b,'Value');
set(handles.text.b,'String',handles.b);
if isempty(handles.J)==1;
    handles.J = handles.I;
end
handles.F = utvid_applyfilter(handles.J,handles.coords,handles);
axes(handles.hax2);imshow(handles.F);title('Enhanced Image');
utvid.enhancement.filters = 'true';set(handles.h{3},'background','g')
guidata(enhanceFigure,handles);
end
%% region
function utvid_sliderregion(enhanceFigure,handles);
handles = guidata(enhanceFigure);
handles.region =  get(handles.sliders.region,'Value');
set(handles.text.region,'String',handles.region);
if isempty(handles.J)==1;
    handles.J = handles.I;
end
handles.F = utvid_applyfilter(handles.J,handles.coords,handles);
axes(handles.hax2);imshow(handles.F);title('Enhanced Image');
utvid.enhancement.filters = 'true';set(handles.h{3},'background','g')
guidata(enhanceFigure,handles);
end
%% window
function utvid_sliderwindow(enhanceFigure,handles);
handles = guidata(enhanceFigure);
handles.window =  get(handles.sliders.window,'Value');
set(handles.text.window,'String',handles.window);
if isempty(handles.J)==1;
    handles.J = handles.I;
end
handles.F = utvid_applyfilter(handles.J,handles.coords,handles);
axes(handles.hax2);imshow(handles.F);title('Enhanced Image');
utvid.enhancement.filters = 'true';set(handles.h{3},'background','g')
guidata(enhanceFigure,handles);
end
%% reset settings
function reset(enhanceFigure,handles);
handles = guidata(enhanceFigure);
field = {'histeq','imadjust','filters'};
for i = 1:size(handles.h,2)
    set(handles.h{1,i},'background','default');
    try
        utvid.enhancement.(field{i}) = 'false';
    catch end
end
handles.J = handles.I;
axes(handles.hax2);imshow(handles.J);title('Enhanced Image');
%% reset slider settings
set(handles.sliders.sigma_up,'value',15);
handles.sigma_up =  get(handles.sliders.sigma_up,'Value');
set(handles.text.sigma_up,'String',handles.sigma_up);
set(handles.sliders.sigma_down,'value',0);
handles.sigma_down =  get(handles.sliders.sigma_down,'Value');
set(handles.text.sigma_down,'String',handles.sigma_down);
set(handles.sliders.alpha,'value',2);
handles.alpha =  get(handles.sliders.alpha,'Value');
set(handles.text.alpha,'String',handles.alpha);
set(handles.sliders.vertical,'value',15);
handles.vertical =  get(handles.sliders.vertical,'Value');
set(handles.text.vertical,'String',handles.vertical);
set(handles.sliders.horizontal,'value',0);
handles.horizontal =  get(handles.sliders.horizontal,'Value');
set(handles.text.horizontal,'String',handles.horizontal);
set(handles.sliders.region,'value',6);
handles.region =  get(handles.sliders.region,'Value');
set(handles.text.region,'String',handles.region);
set(handles.sliders.window,'value',5);
handles.window =  get(handles.sliders.window,'Value');
set(handles.text.window,'String',handles.window);
set(handles.sliders.a,'value',25);
handles.a =  get(handles.sliders.b,'Value');
set(handles.text.a,'String',handles.b);
set(handles.sliders.b,'value',0.5);
handles.b =  get(handles.sliders.b,'Value');
set(handles.text.b,'String',handles.b);


guidata(enhanceFigure,handles);
end
%% toggle color grayscale filtering
function toggle(enhanceFigure,handles);
handles = guidata(enhanceFigure);
if strcmpi(handles.mono,'true') == 1
    handles.mono = 'false';
    set(handles.h{1,6},'background','default','String','Using colorscale');
elseif strcmpi(handles.mono,'false') == 1
    handles.mono = 'true';
    set(handles.h{1,6},'background','g','String','Using grayscale');
else
    disp('using colorscale');
    handles.mono = 'false';
    set(handles.h{1,6},'background','default','String','Using colorscale');
end
if isempty(handles.J)==1;
    handles.J = handles.I;
end
handles.F = utvid_applyfilter(handles.J,handles.coords,handles);
axes(handles.hax2);imshow(handles.F);title('Enhanced Image');
guidata(enhanceFigure,handles)
end

end
