function [utvid] = measurement(utvid)
% inputs:    utvid,
%            frames = {FrameL,FrameR,FrameM}
%            str = or / shape
%            n = framenumber
str = {'or','shape'};

if utvid.coords.nOrMar ~= 0
    jmax = 1;
else
    jmax = 2;
end

for j = 1:jmax
    frames = {utvid.Tracking.FrameL,utvid.Tracking.FrameR,utvid.Tracking.FrameM};
    cam = {'left','right','center'};
    if isfield(utvid.settings,'Measmethod')~=1
        utvid.settings.Measmethod = 'minsearch';
    end
    
    for i = 1:utvid.settings.nrcams
        im  = frames{i};
        coord   = ['utvid.Tracking.Xpred.x' num2str(1)] ;
        y   = utvid.Tracking.(str).pred2D.(cam{i}).y(:,utvid.Tracking.n);
        
        switch utvid.settings.Measmethod
            case 'findblue'
                [x,y] = findblue(x,y,im);
            case 'minsearch'
                [x,y] = minsearch(x,y,im);
            case 'templatematching'
                [x,y] = templatematching(x,y,im);
            case 'findcircle'
                [x,y] = findcircle(x,y,im);
            otherwise
                disp('No valid measurement setting selected');
        end
        utvid.Tracking.(str).meas2D.(cam{i}).x(:,n) = x;
        utvid.Tracking.(str).meas2D.(cam{i}).y(:,n) = y;
    end
end

end