function utvid = setthreshold(utvid)

monpos = get(0,'monitorposition');
if size(monpos,1) == 1                                  % there is only a primary monitor
    scrbase = monpos(1,1:2)+8;
    scrsize = (monpos(1,3:4)-monpos(1,1:2) - [8 62]);
else                                                    % there is a secondary monitor
    scrsize = (monpos(2,3:4)-monpos(2,1:2)  - [8 62]);
    scrbase(1) = monpos(2,1)+8;
    scrbase(2) = monpos(1,4)-monpos(2,4)+9;
end
if scrsize(1)/scrsize(2)>1.5, scrsize(1)=1.5*scrsize(2); end

scrsize = monpos(1,3:4);
winsize = [.25 * scrsize(1) .5*scrsize(2)];
slsize = [winsize(1)-0.4*winsize(1), winsize(2)/(utvid.settings.nrMarkers*1.5)] ;
scrbase = monpos(1,1:2)+0.5*scrsize - 0.5*winsize;

thresFig = figure('Color',[0.94 0.94 0.94],...
    'MenuBar','none',...
    'Name','SET THRESHOLDS FOR PCA CORRECTION',...
    'PaperPositionMode','auto',...
    'NumberTitle','off',...
    'Toolbar','none',...
    'Position',[scrbase winsize],...
    'Resize','off');


slmin = .5;
slmax = 5;
%% create sliders
for i = 1:utvid.settings.nrMarkers+1
    handles.i = i;
    handles.sl{i} = uicontrol(...
        'Parent',thresFig, ...
        'Style','slider', ...
        'Min',slmin,'Max',slmax,'Value',1.5, ...
        'SliderStep',[.25 1]./(slmax-slmin), ...
        'Position',[slsize(1)*.05 (slsize(2)+utvid.settings.nrMarkers)*i  slsize], ...
        'Callback',{@slider,handles.i});
end
handles.sl{i} = uicontrol(...
    'Parent',thresFig, ...
    'Style','slider', ...
    'Min',slmin,'Max',slmax,'Value',1.5, ...
    'SliderStep',[.25 1]./(slmax-slmin), ...
    'Position',[slsize(1)*.05 (slsize(2)+utvid.settings.nrMarkers)*i  slsize], ...
    'Callback',{@sliderdefault});

%% create static text
for i = 1:utvid.settings.nrMarkers+1
    handles.text{i} = uicontrol(...
        'Parent',thresFig,...
        'position', [slsize(1)*1.05 (slsize(2)+utvid.settings.nrMarkers)*i slsize(1)*.2 slsize(2) ],...
        'style','text',...
        'fontsize',12,...
        'string',['Marker: ' num2str(i)]);
end
handles.text{i} = uicontrol(...
    'Parent',thresFig,...
    'position', [slsize(1)*1.05 (slsize(2)+utvid.settings.nrMarkers)*i slsize(1)*.2 slsize(2) ],...
    'style','text',...
    'fontsize',12,...
    'string','All Markers');
%% create defaults and dynamic text
for i = 1:utvid.settings.nrMarkers+1
    handles.val{i} = 2;
    set(handles.sl{i},'value',handles.val{i})
    handles.textval{i} = uicontrol(...
        'Parent',thresFig,...
        'position', [slsize(1)*1.3 (slsize(2)+utvid.settings.nrMarkers)*i slsize(1)*.2 slsize(2) ],...
        'style','text',...
        'fontsize',12,...
        'string',['Threshold: ' num2str(handles.val{i})]);
end
guidata(thresFig,handles);
set(gcf,'CloseRequestFcn',@utvid_close);
uiwait(thresFig)

%% slider callback
    function slider(thresFig,handles,x)
        handles = guidata(thresFig);
        handles.val{x} = get(handles.sl{x},'value');
        set(handles.textval{x},'string', ['Threshold: ' num2str(handles.val{x})]);
        utvid.pca.thres = cell2mat(handles.val(1:end-1));
        guidata(thresFig,handles);
    end

%% Slider callback function for setting all sliders to same value
    function sliderdefault(thresFig,handles)
        handles = guidata(thresFig);
        n = size(handles.val,2);
        handles = guidata(thresFig);
        handles.val{n} = get(handles.sl{n},'value');
        for i = 1:n
            handles.val{i} = handles.val{n};
            set(handles.sl{i},'value',handles.val{n})
            set(handles.textval{i},'string',['Threshold: ' num2str(handles.val{n})]);
        end
        utvid.pca.thres = cell2mat(handles.val(1:end-1));
        guidata(thresFig,handles);
    end

%% close function
    function utvid_close(thresFig,handles,utvid)
        delete(gcf)
    end
end
